<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc https://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->
	
	<!-- Enables the Spring MVC @Controller programming model -->
	<annotation-driven /> <!-- MVC컨트롤러에 있는 다양한 annotation을 사용하겠다고 선언 -->

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
	<resources mapping="/resources/**" location="/resources/" />
	
	<!-- 
		InternalResourceViewResolver
			- URLBasedViewResolver를 상속받은 클래스 ==> url로 view를 찾는 Resolver 
			- view가 서버내에 어떤 위치에 있던 서비스를 해주는 ViewResolver
			- controller 메서드에서 리턴한 view의 url앞에 prefix를 붙이고 뒤에 suffix를 붙여서 
			  url을 완성한 후 해당 view를 찾아 서비스 한다.
			- forward인 경우만 ViewResolver를 탄다. 
	 -->

	<!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
	<beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<!-- jsp가 어디에있는 value를 바꿈으로써 보안 처리도 할 수 있음 -->
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean>
	
	<context:component-scan base-package="com.ssafy.basic" />
	
	
	
</beans:beans>
